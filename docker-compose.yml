services:
  init-db:
    image: alpine:latest
    container_name: init-db
    entrypoint: ["/bin/sh", "/entrypoint-init.sh"]
    volumes:
      - ./init.sql.template:/init.sql.template:ro
      - ./entrypoint-init.sh:/entrypoint-init.sh:ro
      - 3x-ui-aio-volume:/etc/x-ui/
    env_file:
      - path: .env
    networks:
      - 3x-ui-aio-network

  angie:
    image: docker.angie.software/angie:1.10.1-templated
    container_name: angie
    depends_on:
      init-db:
        condition: service_completed_successfully
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
    volumes:
      - ./angie.conf:/etc/angie/templates/angie.conf
      - ./options-ssl-angie.conf:/etc/angie/options-ssl-angie.conf
      - 3x-ui-aio-volume:/var/lib/angie/acme/
      - ./web-stub/:/var/www/stub/
      - ./wait-and-run.sh:/wait-and-run.sh
    env_file:
      - path: .env
    entrypoint: ["/bin/sh", "/wait-and-run.sh"]
    command: ["/init"]
    networks:
      - 3x-ui-aio-network
    restart: unless-stopped

  3x-ui:
    image: ghcr.io/mhsanaei/3x-ui:latest
    container_name: 3x-ui
    depends_on:
      init-db:
        condition: service_completed_successfully
    volumes:
      - 3x-ui-aio-volume:/etc/x-ui/
    environment:
      XRAY_VMESS_AEAD_FORCED: "false"
      X_UI_ENABLE_FAIL2BAN: "false"
    tty: true
    networks:
      - 3x-ui-aio-network
    restart: unless-stopped

networks:
  3x-ui-aio-network:
    name: 3x-ui-aio-network

volumes:
  3x-ui-aio-volume:
    name: 3x-ui-aio-volume
